!function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);class s{constructor(){this._username="",this._password=""}set username(e){this._username=e}set password(e){this._password=e}}const n={username:/^[a-zA-Z\d.]{6,}$/,password:/^(?!.*?[\^])(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Z]+.{7,}$/,confirmed:/^(?!.*?[\^])(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Z]+.{7,}$/,email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/},o=document.querySelector("#username"),a=document.querySelector("#password"),i=document.querySelector("#confirmed"),u=document.querySelector("#email"),l=document.querySelector("form"),d=document.querySelector("#submit"),c=document.querySelector(".pass-match");const m=new class extends s{constructor(){super(),this._confirmed="",this._email=""}set confirmed(e){this._confirmed=e}set email(e){this._email=e}validateInput(e,t){return n[e].test(t)}checkPasswordMatch(){return this._password===this._confirmed}validateForm(){return""!==this._username&&""!==this._password&&""!==this._confirmed&&""!==this._email&&this.checkPasswordMatch()}submitForm(){return{username:this._username,password:this._password,email:this._email,deleted:!1}}};function f(e){e.addEventListener("blur",()=>{let t=m.validateInput(e.id,e.value);try{if(!t)throw"Invalid Input"}catch(t){e.className="form-control is-invalid"}finally{"username"===e.id?m.username=t?e.value:"":"password"===e.id?m.password=t?e.value:"":"confirmed"===e.id?m.confirmed=t?e.value:"":"email"===e.id&&(m.email=t?e.value:""),t&&(e.className="form-control is-valid"),m.validateForm()?(d.disabled=!1,c.style.display="none"):(d.disabled=!0,m.checkPasswordMatch()?c.style.display="none":c.style.display="block")}})}new Promise((e,t)=>{l.addEventListener("submit",t=>{t.preventDefault(),e(m.submitForm())}),f(o),f(a),f(i),f(u)}).then(e=>{console.log(e)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,